jobs:
- job: BuildTemplate
  variables:
    toolchain_update: 13.3.rel1
    toolchain: https://developer.arm.com/-/media/Files/downloads/gnu/$(toolchain_update)/binrel/arm-gnu-toolchain-$(toolchain_update)-x86_64-arm-none-eabi.tar.xz
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: InstallSSHKey@0
    inputs:
      sshKeySecureFile: id_sigbot_github_azure_devops
      hostName: $(gh.knownhosts)
      sshPublicKey: $(gh.publickey)
  - checkout: self
  - bash: |
      curl -LSso toolchain.tar.xz $(toolchain)
      tar -xJvf toolchain.tar.xz
      echo "##vso[task.prependpath]$(pwd)/arm-gnu-toolchain-$(toolchain_update)-x86_64-arm-none-eabi/bin"
    displayName: Install gcc-arm-embedded
  - task: UsePythonVersion@0
    inputs:
      addToPath: true
      versionSpec: '3.11.0'
  - task: PipAuthenticate@1
    inputs:
      artifactFeeds: 'pros-cli'
      # use official PyPi registry first and fall back to internal feed as needed
      onlyAddExtraIndex: true
  - bash: pip install pros-cli
    displayName: Install CLI
  - bash: |
      make template
      mkdir -p artifacts
      cp template/*.zip artifacts
    displayName: Build template
  - bash: |
      echo "##vso[build.UpdateBuildNumber]`cat version`"
      echo "##vso[task.setvariable variable=KernelVersion]`cat version`"
    displayName: Update Build Number
  - bash: |
      make
    displayName: Build binaries
  - task: PublishPipelineArtifact@0
    inputs:
      targetPath: artifacts
      artifactName: template
    condition: succeeded()
  # - task: UniversalPackages@0
  #   inputs:
  #     command: publish
  #     publishDirectory: artifacts
  #     vstsFeedPublish: 'pros-depot-nightly'
  #     vstsFeedPackagePublish: 'kernel'
  #     versionOption: custom
  #     versionPublish: $(KernelVersion)
  #     packagePublishDescription: 'CI Build of Kernel'
  #   condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/develop')))
